from aiogram.types import BotCommand

translations = {
    'en': {
        '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:': 'Select a region:',
        '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:': 'Select the desired option:',
        '–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...': 'This feature is still in development...',
        '–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–∫—Å–∏:': 'Select the duration of the proxy operation:',
        '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:': 'Select a payment method:'
    }
}

welcome_message_1 = {
    "ru": "Proxy Flash —ç—Ç–æ:\n\nüî•–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ 24/7, –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏, –±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π;\nüî•–ø—Ä–æ–∫—Å–∏ –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ –≤ –≤–∞—à–µ–º –ª–∏—á–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏;\nüî•—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.",
    "en": "Proxy Flash is:\n\nüî• customer support 24/7, we are always on the phone, no exceptions;\nüî• proxies will be only for your personal use;\nüî• stable connection."
}

welcome_message_2 = {
    "ru": "–ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –ø—Ä–æ–∫—Å–∏, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /proxy. –ö—É–ø–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–∫—Å–∏ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–æ –≤–∫–ª–∞–¥–∫–µ /my_proxy.\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞, –æ—Ç–∫—Ä—ã–≤ –º–µ–Ω—é",
    "en": "To buy a proxy, enter the command /proxy. Purchased proxies will be displayed in the /my_proxy tab. You can view all the bot's functions by opening the menu"
}

payment_method_selection = {
    "ru": "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
    "en": "Select a payment method:"
}

proxy_duration_selection = {
    "ru": "–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–∫—Å–∏:",
    "en": "Select the duration of the proxy operation:"
}

bot_commands = {
    'ru': [
        BotCommand(command="/proxy", description="–ö—É–ø–∏—Ç—å –ø—Ä–æ–∫—Å–∏"),
        BotCommand(command="/help", description="–ü–æ–º–æ—â—å"),
        BotCommand(command="/affiliate", description="–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"),
        BotCommand(command="/my_proxy", description="–ú–æ–∏ –ø—Ä–æ–∫—Å–∏")
    ],
    'en': [
        BotCommand(command="/proxy", description="Buy proxy"),
        BotCommand(command="/help", description="Help"),
        BotCommand(command="/affiliate", description="Affiliate program"),
        BotCommand(command="/my_proxy", description="My proxy")
    ]
}


def available_language(language: str):
    if language != 'ru' and language != 'en':
        return 'en'
    else:
        return language


def choose_language(text, lang='ru'):
    if lang == 'ru':
        return text
    else:
        global translations
        try:
            return translations[lang][text]
        except:
            return text


class lang_:
    language = 'ru'
    @classmethod
    def setLanguage(cls, language):
        cls.language = language

    @classmethod
    def getLanguage(cls):
        return cls.language